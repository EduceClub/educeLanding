[{"/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/index.js":"1","/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/reportWebVitals.js":"2","/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/App.js":"3","/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/components/Layout.js":"4","/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/components/SectionOne.js":"5","/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/components/SectionTwo.js":"6","/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/components/HowItWorks.js":"7","/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/components/SectionThree.js":"8","/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/components/Footer.js":"9","/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/components/Nav.js":"10"},{"size":425,"mtime":1662435843046,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1662431136195,"results":"13","hashOfConfig":"12"},{"size":805,"mtime":1662670850652,"results":"14","hashOfConfig":"12"},{"size":258,"mtime":1662433520954,"results":"15","hashOfConfig":"12"},{"size":2332,"mtime":1662670853084,"results":"16","hashOfConfig":"12"},{"size":2968,"mtime":1662670852277,"results":"17","hashOfConfig":"12"},{"size":6053,"mtime":1662670849684,"results":"18","hashOfConfig":"12"},{"size":396,"mtime":1662670851509,"results":"19","hashOfConfig":"12"},{"size":694,"mtime":1662668140290,"results":"20","hashOfConfig":"12"},{"size":4850,"mtime":1662669566273,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y3m0p9",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},"/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/index.js",[],[],"/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/reportWebVitals.js",[],[],"/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/App.js",["58","59"],[],"import logo from './logo.svg';\nimport './App.css';\nimport Layout from './components/Layout'\nimport SectionOne from './components/SectionOne';\nimport SectionTwo from './components/SectionTwo';\nimport SectionThree from './components/SectionThree'\nimport HowItWorks from './components/HowItWorks';\nimport { createTheme, ThemeProvider } from \"@mui/material\";\n\nconst educeTheme = createTheme({\n  palette: {\n    primary: {\n      main: \"#AAF0C1\"\n    },\n    secondary: {\n      main: \"#000000\"\n    }\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={educeTheme}>\n      <div className=\"App\">\n        <Layout>\n          <SectionOne />\n          <SectionTwo />\n          {/* <SectionThree /> */}\n          <HowItWorks />\n        </Layout>\n      </div>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/components/Layout.js",[],[],"/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/components/SectionOne.js",["60"],[],"import React from 'react'\nimport { Button, Typography, makeStyles } from '@material-ui/core';\nimport OrganizeOne from '../assets/organizationImage.svg'\n\nconst withStyles = makeStyles(() => ({\n    sectionOneWrapper: {\n        display: \"flex\",\n        alignItems: \"center\",\n        background: \"#AAF0C1\",\n        height: \"500px\",\n        marginTop: \"40px\",\n        padding: \"0px 14% 0 14%\",\n        \"@media(max-width: 600px)\": {\n            flexDirection: \"column\",\n            paddingTop: \"100px\"\n        }\n    },\n    sectionOneHeader: {\n        fontWeight: \"bold\",\n        fontSize: \"3rem\",\n        textAlign: \"left\",\n        marginBottom: \"20px\",\n        \"@media(max-width: 600px)\": {\n            fontSize: \"2rem\"\n        }\n    },\n    sectionOneSubheader: {\n        fontSize: \"1rem\",\n        textAlign: \"left\"\n    },\n    sectionOneJoinButton: {\n        background: \"black\",\n        color: \"white\",\n        borderRadius: \"20px\",\n        width: \"200px\",\n        height: \"50px\",\n        margin: \"20px 0 20px 0\",\n        fontSize: \"1.125rem\",\n        \"& > span\": {\n            textTransform: \"none\",\n        },\n        \"&:hover\": {\n            backgroundColor: \"gray\"\n        },\n        \"@media(max-width: 600px)\": {\n            width: \"100%\"\n        }\n    },\n    bannerImage: {\n        width: \"53vw\",\n        \"@media(max-width: 600px)\": {\n            minWidth: \"80vw\"\n        }\n    },\n    bannerContentWrapper: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        minWidth: \"32vw\"\n    },\n    bannerImageWrapper: {\n        display: \"flex\",\n    }\n\n}));\n\n\n\nconst SectionOne = () => {\n\n    const classes = withStyles();\n\n    return (\n        <div className={classes.sectionOneWrapper}>\n            <div className={classes.bannerContentWrapper}>\n                <Typography className={classes.sectionOneHeader}>Simplify your knowledge</Typography>\n                <Typography className={classes.sectionOneSubheader}>Capture and build on your insights like never before.</Typography>\n                <Button className={classes.sectionOneJoinButton}>Learn More</Button>\n            </div>\n            <div className={classes.bannerImageWrapper}>\n                <img className={classes.bannerImage} src={OrganizeOne} />\n            </div>\n        </div>\n    )\n}\n\nexport default SectionOne","/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/components/SectionTwo.js",["61"],[],"import { Typography, makeStyles } from '@material-ui/core';\nimport React from 'react'\nimport ConfusionGuy from '../assets/confusionGuy.svg'\n\nconst withStyles = makeStyles(() => ({\n    sectionTwoWrapper: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: \"0 14% 0 14%\",\n        margin: \"auto\",\n        background: \"black\",\n        height: \"500px\",\n        \"@media(max-width: 600px)\": {\n            flexDirection: \"column\",\n            height: \"auto\"\n        }\n    },\n    sectionTwoHeader: {\n        fontWeight: \"bold\",\n        fontSize: \"3rem\",\n        textAlign: \"left\",\n        \"& > span\": {\n            color: \"#AAF0C1\"\n        },\n        \"@media(max-width: 600px)\": {\n            fontSize: \"2rem\"\n        }\n    },\n    sectionTwoText: {\n        fontSize: \"1rem\",\n        textAlign: \"left\",\n        margin: \"10px 0 10px 0\",\n    },\n    sectionTwoContentWrapper: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        minWidth: \"40%\",\n        color: \"white\",\n        maxHeight: \"500px\"\n    },\n    sectionTwoImage: {\n        borderRadius: \"35px\",\n        width: \"53vw\",\n        \"@media(max-width: 600px)\": {\n            minWidth: \"80vw\"\n        }\n    },\n    imageWrapper: {\n        display: \"flex\",\n        marginLeft: \"-150px\",\n        \"@media(max-width: 600px)\": {\n            marginLeft: \"0px\"\n        }\n    },\n    sectionTwoHeaderTextWrapper: {\n        display: \"flex\",\n        margin: \"0px 0 20px 0\"\n    },\n    sectionTwoContentTextWrapper: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    }\n\n}));\n\n\nconst SectionTwo = () => {\n\n    const classes = withStyles();\n\n    return (\n        <div className={classes.sectionTwoWrapper}>\n            <div className={classes.imageWrapper}>\n                <img className={classes.sectionTwoImage} src={ConfusionGuy} />\n            </div>\n            <div className={classes.sectionTwoContentWrapper}>\n                <div className={classes.sectionTwoHeaderTextWrapper}>\n                    <Typography className={classes.sectionTwoHeader}>Information overload is<span>&nbsp;real</span></Typography>\n                </div>\n                <div className={classes.sectionTwoContentTextWrapper}>\n                    <Typography className={classes.sectionTwoText}>Do you have insights, quotes, and reminders on sticky notes, in physical and online notebooks,\n                        and 101 other places...and still forget where you put that one piece of information you need right now?</Typography>\n                    <Typography className={classes.sectionTwoText}>Wish you had a way to build upon the insights you captured in a meaningful way?</Typography>\n                    <Typography className={classes.sectionTwoText}>Educe is setup to be your central repository for you to store your short insights and then build upon them.</Typography>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default SectionTwo","/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/components/HowItWorks.js",["62","63","64","65","66","67","68","69","70","71","72","73"],[],"import { ClassNames } from '@emotion/react';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport React, { useState } from 'react'\nimport Buildon from '../assets/Buildon2.gif'\nimport Recall from '../assets/Recall.gif'\nimport Store2 from '../assets/Store2.gif'\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepButton from '@mui/material/StepButton';\nimport StepContent from '@mui/material/StepContent';\nimport Button from '@mui/material/Button';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nconst withStyles = makeStyles((theme) => ({\n    tabsWrapper: {\n        display: \"flex\",\n        padding: \"30px\",\n        height: \"600px\",\n        \"@media(max-width: 600px)\": {\n            padding: \"0px\"\n        }\n    },\n    howToContentWrapper: {\n        display: \"flex\",\n        margin: \"5% 14% 5% 14%\",\n        background: \"#AAF0C1\",\n        borderRadius: \"35px\",\n        \"@media(max-width: 600px)\": {\n            width: \"100%\",\n            margin: \"0px\",\n            borderRadius: \"0px\"\n        }\n    },\n    gif: {\n        width: \"60%\",\n        borderRadius: \"35px\",\n        maxHeight: \"500px\",\n        \"@media(max-width: 600px)\": {\n            width: \"100%\"\n        }\n    },\n    tabsContentWrapper: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n    },\n    tabPanelElement: {\n        \"& > div\":{\n            padding: \"20px 0px\"\n        }\n    },\n    tabsDescription: {\n        textAlign: \"left\",\n        width: \"100%\",\n        margin: \"10px 24px 0px 24px\",\n        \"@media(max-width: 600px)\": {\n            margin: \"0px\",\n            marginBottom: \"40px\"\n        }\n    },\n    tabLabel: {\n        \"& button\": {\n            textTransform: \"none\",\n        }\n    },\n    tabLabelSelected: {\n        color: \"black !important\",\n    },\n    tabLabelIndicator: {\n        backgroundColor: \"black\",\n    },\n    tabsInnerContentWrapper: {\n        display: \"flex\",\n        \"@media(max-width: 600px)\": {\n            flexDirection: \"column\",\n            padding: \"10px\"\n        }\n    }\n}));\n\n\nconst HowItWorks = () => {\n    const classes = withStyles();\n\n    const steps = [{\n        label: 'Store',\n        gif: Store2\n    },\n    {\n        label: 'Build',\n        gif: Buildon\n    },\n    {\n        label: 'Recall',\n        gif: Recall\n    }];\n\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [value, setValue] = React.useState(0);\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n\n        return (\n            <div\n                role=\"tabpanel\"\n                hidden={value !== index}\n                id={`simple-tabpanel-${index}`}\n                aria-labelledby={`simple-tab-${index}`}\n                {...other}\n            >\n                {value === index && (\n                    <Box sx={{ p: 3 }}>\n                        <div className={classes.tabsInnerContentWrapper}>{children}</div>\n                    </Box>\n                )}\n            </div>\n        );\n    }\n\n    function a11yProps(index) {\n        return {\n            id: `simple-tab-${index}`,\n            'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n\n    const handleStep = (step) => () => {\n        setActiveStep(step);\n    };\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.howToContentWrapper}>\n            <div className={classes.tabsWrapper}>\n                <Box>\n                    <Box>\n                        <Tabs indicatorColor='secondary' classes={{ root: classes.tabLabel}} value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n                            <Tab classes={{root: classes.tabLabelSelected}} label=\"Store\" {...a11yProps(0)} />\n                            <Tab classes={{root: classes.tabLabelSelected}} label=\"Build\" {...a11yProps(1)} />\n                            <Tab classes={{root: classes.tabLabelSelected}} label=\"Recall\" {...a11yProps(2)} />\n                        </Tabs>\n                    </Box>\n\n                    <div className={classes.tabsContentWrapper}>\n                        <TabPanel className={classes.tabPanelElement} value={value} index={0}>\n                            <Typography className={classes.tabsDescription}>Store short insights with a title and tag which allow you to recall your information easily.</Typography>\n                            <img className={classes.gif} src={Store2} />\n                        </TabPanel>\n                    </div>\n\n\n                    <div className={classes.tabsContentWrapper}>\n                        <TabPanel className={classes.tabPanelElement} value={value} index={1}>\n                            <Typography className={classes.tabsDescription}>Share categories with others to help build up on your insights. \n                            Whether you have a work topic to share with colleagues and industry experts or you have a child's medical information you want to share with your partner.  \n                            <span> <br/><br/>Shared categories allow you to work with others to build updon your information.</span> </Typography>\n                         \n                            <img className={classes.gif} src={Buildon} />\n                        </TabPanel>\n                    </div>\n\n\n                    <div className={classes.tabsContentWrapper}>\n                        <TabPanel className={classes.tabPanelElement} value={value} index={2}>\n                            <Typography className={classes.tabsDescription}>Category tags allow you to see all the insights or information you store to a topic in one view.\n                            This helps you organize your information over time.</Typography>\n                            <img className={classes.gif} src={Recall} />\n                        </TabPanel>\n                    </div>\n\n                </Box>\n\n\n            </div>\n        </div >\n\n    )\n}\n\nexport default HowItWorks","/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/components/SectionThree.js",["74"],[],"import {Typography, makeStyles } from '@material-ui/core';\nimport React from 'react'\n\nconst withStyles = makeStyles(() => ({\n    sectionThreeWrapper: {\n        display: \"flex\",\n        border: \"1px solid red\"\n    }\n\n}));\nconst SectionThree = () => {\n\n  const classes = withStyles();\n  return (\n    <div className={classes.sectionThreeWrapper}>SectionThree</div>\n  )\n}\n\nexport default SectionThree","/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/components/Footer.js",[],[],"/Users/dougkellermeyer/Desktop/Development/educe/educe-landing/src/components/Nav.js",["75"],[],"import React, { useState } from 'react'\nimport { Button, Typography, makeStyles } from '@material-ui/core';\nimport EduceLogo from '../assets/educeLogo.png'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst withStyles = makeStyles(() => ({\n    navbarWrapper: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        background: \"#AAF0C1\",\n        height: \"75px\",\n        position: \"fixed\",\n        top: 0,\n        width: \"100%\"\n    },\n    navbarImage: {\n        width: \"200px\",\n        margin: \"10px\"\n    },\n    navbarMenuWrapper: {\n        display: \"flex\",\n        \"@media(max-width: 600px)\": {\n            display: \"none\"\n        }\n    },\n    menuItem: {\n        margin: \"auto 15px auto 15px !important\",\n    },\n    loginButton: {\n        backgroundColor: \"black\",\n        color: \"white\",\n        borderRadius: \"35px\",\n        height: \"35px\",\n        margin: \"auto\",\n        marginRight: \"10px\"\n    },\n    loginButtonMobile: {\n        \"& span\": {\n            color: \"white\",\n        }\n    \n    },\n    navBarHamburgerDrawerWrapper: {\n        display: \"none\",\n        \"@media(max-width: 600px)\": {\n            display: \"flex\"\n        }\n    },\n    hamburgerIcon: {\n        margin: \"20px\",\n        fontSize: \"2.5rem\",\n        \"@media(min-width: 601px)\": {\n            display: \"none\"\n        }\n    },\n    drawerItem: {\n        \"&:hover\":{\n            backgroundImage: \"black\",\n            border: \"1px solid #000000\",\n            color: \"black\"\n        },\n        \"&:selected:hover\":{\n            backgroundImage: \"black\",\n            border: \"1px solid #000000\",\n            color: \"black\"\n        }\n      },\n      drawerItemLogin: {\n        backgroundColor: \"black\",\n      },\n      list: {\n        width: \"250px\"\n      },\n\n}));\n\nconst Nav = () => {\n\n    const classes = withStyles();\n\n    const [openDrawer, setOpenDrawer] = useState(false)\n\n    const toggleDrawer = () => {\n        setOpenDrawer(drawerOpen => !drawerOpen)\n    }\n\n    const handleClick = (id) => {\n        // let scrollToId = id\n        // setTimeout(() => scrollTo(scrollToId), 100)\n    }\n    return (\n        <div className={classes.navbarWrapper}>\n            <div>\n                <img\n                    className={classes.navbarImage}\n                    src={EduceLogo}\n                    alt=\"company logo\"\n                />\n            </div>\n            <div className={classes.navbarMenuWrapper}>\n                <Typography className={classes.menuItem}>How it Works</Typography>\n                <Typography className={classes.menuItem}>Contact</Typography>\n                <Button className={classes.loginButton}>Login</Button>\n            </div>\n            <div className={classes.navBarHamburgerDrawerWrapper}>\n                <MenuIcon\n                    className={classes.hamburgerIcon}\n                    onClick={toggleDrawer}\n                />\n                <Drawer\n                    open={openDrawer}\n                    onClose={toggleDrawer}\n                    anchor=\"right\"\n                    className={classes.drawerRoot}\n                >\n                    <div\n                        className={classes.list}\n                        role=\"presentation\"\n                        onClick={toggleDrawer}\n                        onKeyDown={toggleDrawer}\n                    >\n                        <List>\n                            <ListItem\n                                className={classes.drawerItem}\n                                button\n                            // onClick={() => handleClick('#services')}\n                            >\n                                <ListItemText primary={\"How it Works\"} />\n                            </ListItem>\n                            <ListItem\n                                className={classes.drawerItem}\n                                button\n                            // onClick={() => scrollTo('#about')}\n                            // onClick={() => handleClick(\"#about\")}\n                            >\n                                <ListItemText primary={\"Contact\"} />\n                            </ListItem>\n                            <ListItem\n                                className={classes.drawerItemLogin}\n                                button\n                            // onClick={() => handleClick('#contactForm')}\n                            >\n                                <ListItemText className={classes.loginButtonMobile} primary={\"Login\"} />\n                            </ListItem>\n                        </List>\n                    </div>\n                </Drawer>\n            </div>\n        </div>\n    )\n}\n\nexport default Nav;\n",{"ruleId":"76","severity":1,"message":"77","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":12},{"ruleId":"76","severity":1,"message":"80","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":20},{"ruleId":"81","severity":1,"message":"82","line":81,"column":17,"nodeType":"83","endLine":81,"endColumn":74},{"ruleId":"81","severity":1,"message":"82","line":75,"column":17,"nodeType":"83","endLine":75,"endColumn":79},{"ruleId":"76","severity":1,"message":"84","line":1,"column":10,"nodeType":"78","messageId":"79","endLine":1,"endColumn":20},{"ruleId":"76","severity":1,"message":"85","line":8,"column":8,"nodeType":"78","messageId":"79","endLine":8,"endColumn":15},{"ruleId":"76","severity":1,"message":"86","line":9,"column":8,"nodeType":"78","messageId":"79","endLine":9,"endColumn":12},{"ruleId":"76","severity":1,"message":"87","line":10,"column":8,"nodeType":"78","messageId":"79","endLine":10,"endColumn":18},{"ruleId":"76","severity":1,"message":"88","line":11,"column":8,"nodeType":"78","messageId":"79","endLine":11,"endColumn":19},{"ruleId":"76","severity":1,"message":"89","line":12,"column":8,"nodeType":"78","messageId":"79","endLine":12,"endColumn":14},{"ruleId":"76","severity":1,"message":"90","line":86,"column":11,"nodeType":"78","messageId":"79","endLine":86,"endColumn":16},{"ruleId":"76","severity":1,"message":"91","line":100,"column":12,"nodeType":"78","messageId":"79","endLine":100,"endColumn":22},{"ruleId":"76","severity":1,"message":"92","line":130,"column":11,"nodeType":"78","messageId":"79","endLine":130,"endColumn":21},{"ruleId":"81","severity":1,"message":"82","line":153,"column":29,"nodeType":"83","endLine":153,"endColumn":73},{"ruleId":"81","severity":1,"message":"82","line":164,"column":29,"nodeType":"83","endLine":164,"endColumn":74},{"ruleId":"81","severity":1,"message":"82","line":173,"column":29,"nodeType":"83","endLine":173,"endColumn":73},{"ruleId":"76","severity":1,"message":"93","line":1,"column":9,"nodeType":"78","messageId":"79","endLine":1,"endColumn":19},{"ruleId":"76","severity":1,"message":"94","line":91,"column":11,"nodeType":"78","messageId":"79","endLine":91,"endColumn":22},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'SectionThree' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ClassNames' is defined but never used.","'Stepper' is defined but never used.","'Step' is defined but never used.","'StepButton' is defined but never used.","'StepContent' is defined but never used.","'Button' is defined but never used.","'steps' is assigned a value but never used.","'activeStep' is assigned a value but never used.","'handleStep' is assigned a value but never used.","'Typography' is defined but never used.","'handleClick' is assigned a value but never used."]